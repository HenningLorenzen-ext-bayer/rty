require(usethis)
require(usethis)
use_gpl_license()
use_r("core")
usethis::use_package("devtools")
use_r("credentials")
use_r("cred")
?available.packages
?options
use_testthat()
use_test("profile")
options()
getOption("rt.cred")
get_cred <- function(name = "default"){
stopifnot(is.character(name))
getOption("rt.cred")[[name]]
}
get_cred
get_cred()
get_cred <- function(name = "default"){
stopifnot(is.character(name))
res <- getOption("rt.cred")[[name]]
`if`(is.null(res),
stop(errorCondition(sprintf("Crednetial by the name of %s is not available in this session.",
name),
class = "rt.error.unavailable_cred")),
res)
}
get_cred <- function(name = "default"){
stopifnot(is.character(name))
res <- getOption("rt.cred")[[name]]
`if`(is.null(res),
stop(errorCondition(sprintf("Crednetial by the name of \"%s\" is not available in this session.",
name),
class = "rt.error.unavailable_cred")),
res)
}
get_cred()
?errorCondition
options("repos")
str(options("repos"))
options
options(rt.creds = list())
options("rt.creds")
x <- options("rt.creds")
x$rt.creds
getOption("rt.creds")[["rt.creds"]]
getOption("rt.creds")
root <- "https://artifactory.bayer.com/artifactory/"
file.path(root, "api", "cran")
test_string <- "/api/cran/"
gsub("^\/", "", test_string)
gsub("^\\/", "", test_string)
gsub("^\\/|\\/$", "", test_string)
user_r("cred")
use_r("cred")
use_r("repo")
grepl("\\.tar\\.gz$", "wow.tar.gz")
repl("\\.tar\\.gz$", "wow.tar.gz")
grepl("\\.tar\\.gz$", "wow.tar.gz")
# Query Available Packages
available.packages(contrib.url(unclass(my_repo)),
headers = my_header,
)
install.packages("available")
use_package("curl")
use_package("curl")
devtools::check()
devtools::check()
devtools::check()
is.character(NA_character_)
length(NA_character_)
?is.mts
"" == ""
!"" == ""
usethis::edit_r_profile()
usethis::edit_r_environ()
usethis::use_r("utils")
source('~/rt/R/utils.R', echo=TRUE)
one_string("default")
paste(one_string("default"), "wow)"
paste(one_string("default"), "wow")
one_string(one_string("wow"))
install.packages("pkgdown")
usethis::use_r("option_accessors")
